services:
  web:
    build: .
    container_name: promo_code
    ports:
      - 8000:8080
    volumes:
      - .:/usr/src/app
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
      antifraud:
        condition: service_started

    env_file:
      - .env
  db:
    image: postgres:17
    container_name: postgres_db
    volumes:
      - postgres_db:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    env_file:
      - .env
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

    
  antifraud:
    image: lodthe/prod-backend-antifraud:latest
    environment:
      SERVER_PORT: ${ANTIFRAUD_INTERNAL_PORT}
      CACHE_DURATION_MS: ${ANTIFRAUD_CACHE_MS}
      SLOWDOWN_AFTER: ${ANTIFRAUD_SLOWDOWN_AFTER}
      BLOCKED_EMAILS: ${ANTIFRAUD_BLOCKED_EMAILS}
    ports:
      - "${ANTIFRAUD_EXTERNAL_PORT}:${ANTIFRAUD_INTERNAL_PORT}"

volumes:
  postgres_db:
  redis_data: